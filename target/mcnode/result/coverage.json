[{"category":"line","ifCatch":true,"nodeName":"s35e40 getType (LTriangle;)LString; public Triangle.java line"},{"category":"line","ifCatch":true,"nodeName":"s11e22 getType (LTriangle;)LString; public Triangle.java line"},{"category":"line","ifCatch":true,"nodeName":"s124e125 isTriangle (LTriangle;)Z public Triangle.java line"},{"category":"line","ifCatch":true,"nodeName":"s31e41 isTriangle (LTriangle;)Z public Triangle.java line"},{"category":"line","ifCatch":true,"nodeName":"s86e87 getType (LTriangle;)LString; public Triangle.java line"},{"category":"line","ifCatch":true,"nodeName":"s51e61 isTriangle (LTriangle;)Z public Triangle.java line"},{"category":"line","ifCatch":true,"nodeName":"s65e76 getType (LTriangle;)LString; public Triangle.java line"},{"category":"line","ifCatch":true,"nodeName":"s11e21 isTriangle (LTriangle;)Z public Triangle.java line"},{"category":"line","ifCatch":true,"nodeName":"s0e10 isTriangle (LTriangle;)Z public Triangle.java line"},{"category":"line","ifCatch":true,"nodeName":"s53e64 getType (LTriangle;)LString; public Triangle.java line"},{"category":"line","ifCatch":true,"nodeName":"s82e101 isTriangle (LTriangle;)Z public Triangle.java line"},{"category":"line","ifCatch":true,"nodeName":"s0e26 getBorders ()[J public Triangle.java line"},{"category":"line","ifCatch":true,"nodeName":"s23e34 getType (LTriangle;)LString; public Triangle.java line"},{"category":"line","ifCatch":true,"nodeName":"s0e10 getType (LTriangle;)LString; public Triangle.java line"},{"category":"line","ifCatch":true,"nodeName":"s62e81 isTriangle (LTriangle;)Z public Triangle.java line"},{"category":"line","ifCatch":true,"nodeName":"s83e85 getType (LTriangle;)LString; public Triangle.java line"},{"category":"line","ifCatch":true,"nodeName":"s15e15 diffOfBorders (JJ)J public Triangle.java line"},{"category":"line","ifCatch":true,"nodeName":"s0e5 diffOfBorders (JJ)J public Triangle.java line"},{"category":"line","ifCatch":true,"nodeName":"s42e50 isTriangle (LTriangle;)Z public Triangle.java line"},{"category":"line","ifCatch":true,"nodeName":"s0e35 <init> (JJJ)V public Triangle.java line"},{"category":"line","ifCatch":true,"nodeName":"s77e82 getType (LTriangle;)LString; public Triangle.java line"},{"category":"line","ifCatch":true,"nodeName":"s102e121 isTriangle (LTriangle;)Z public Triangle.java line"},{"category":"line","ifCatch":true,"nodeName":"s12e14 diffOfBorders (JJ)J public Triangle.java line"},{"category":"line","ifCatch":true,"nodeName":"s41e52 getType (LTriangle;)LString; public Triangle.java line"},{"category":"line","ifCatch":true,"nodeName":"s6e11 diffOfBorders (JJ)J public Triangle.java line"},{"category":"line","ifCatch":true,"nodeName":"s22e30 isTriangle (LTriangle;)Z public Triangle.java line"},{"category":"line","ifCatch":true,"nodeName":"s122e123 isTriangle (LTriangle;)Z public Triangle.java line"},{"category":"branch","ifCatch":true,"nodeName":"s6e11 diffOfBorders (JJ)J public Triangle.java branch"},{"category":"branch","ifCatch":true,"nodeName":"s12e14 diffOfBorders (JJ)J public Triangle.java branch"},{"category":"branch","ifCatch":true,"nodeName":"s11e22 getType (LTriangle;)LString; public Triangle.java branch"},{"category":"branch","ifCatch":true,"nodeName":"s86e87 getType (LTriangle;)LString; public Triangle.java branch"},{"category":"branch","ifCatch":true,"nodeName":"s35e40 getType (LTriangle;)LString; public Triangle.java branch"},{"category":"branch","ifCatch":true,"nodeName":"s41e52 getType (LTriangle;)LString; public Triangle.java branch"},{"category":"branch","ifCatch":true,"nodeName":"s83e85 getType (LTriangle;)LString; public Triangle.java branch"},{"category":"branch","ifCatch":true,"nodeName":"s77e82 getType (LTriangle;)LString; public Triangle.java branch"},{"category":"branch","ifCatch":true,"nodeName":"s122e123 isTriangle (LTriangle;)Z public Triangle.java branch"},{"category":"branch","ifCatch":true,"nodeName":"s124e125 isTriangle (LTriangle;)Z public Triangle.java branch"},{"category":"branch","ifCatch":true,"nodeName":"s124e125 isTriangle (LTriangle;)Z public Triangle.java branch"},{"category":"branch","ifCatch":true,"nodeName":"s62e81 isTriangle (LTriangle;)Z public Triangle.java branch"},{"category":"condition","ifCatch":true,"nodeName":"s0e5 diffOfBorders (JJ)J public Triangle.java condition false"},{"category":"condition","ifCatch":true,"nodeName":"s0e5 diffOfBorders (JJ)J public Triangle.java condition true"},{"category":"condition","ifCatch":true,"nodeName":"s65e76 getType (LTriangle;)LString; public Triangle.java condition true"},{"category":"condition","ifCatch":true,"nodeName":"s65e76 getType (LTriangle;)LString; public Triangle.java condition false"},{"category":"condition","ifCatch":true,"nodeName":"s41e52 getType (LTriangle;)LString; public Triangle.java condition true"},{"category":"condition","ifCatch":true,"nodeName":"s41e52 getType (LTriangle;)LString; public Triangle.java condition false"},{"category":"condition","ifCatch":true,"nodeName":"s11e22 getType (LTriangle;)LString; public Triangle.java condition true"},{"category":"condition","ifCatch":true,"nodeName":"s11e22 getType (LTriangle;)LString; public Triangle.java condition false"},{"category":"condition","ifCatch":true,"nodeName":"s53e64 getType (LTriangle;)LString; public Triangle.java condition true"},{"category":"condition","ifCatch":true,"nodeName":"s53e64 getType (LTriangle;)LString; public Triangle.java condition false"},{"category":"condition","ifCatch":true,"nodeName":"s23e34 getType (LTriangle;)LString; public Triangle.java condition false"},{"category":"condition","ifCatch":true,"nodeName":"s23e34 getType (LTriangle;)LString; public Triangle.java condition true"},{"category":"condition","ifCatch":true,"nodeName":"s0e10 getType (LTriangle;)LString; public Triangle.java condition false"},{"category":"condition","ifCatch":true,"nodeName":"s0e10 getType (LTriangle;)LString; public Triangle.java condition true"},{"category":"condition","ifCatch":false,"nodeName":"s51e61 isTriangle (LTriangle;)Z public Triangle.java condition true"},{"category":"condition","ifCatch":true,"nodeName":"s51e61 isTriangle (LTriangle;)Z public Triangle.java condition false"},{"category":"condition","ifCatch":true,"nodeName":"s102e121 isTriangle (LTriangle;)Z public Triangle.java condition false"},{"category":"condition","ifCatch":false,"nodeName":"s102e121 isTriangle (LTriangle;)Z public Triangle.java condition true"},{"category":"condition","ifCatch":true,"nodeName":"s11e21 isTriangle (LTriangle;)Z public Triangle.java condition false"},{"category":"condition","ifCatch":false,"nodeName":"s11e21 isTriangle (LTriangle;)Z public Triangle.java condition true"},{"category":"condition","ifCatch":true,"nodeName":"s22e30 isTriangle (LTriangle;)Z public Triangle.java condition false"},{"category":"condition","ifCatch":true,"nodeName":"s22e30 isTriangle (LTriangle;)Z public Triangle.java condition true"},{"category":"condition","ifCatch":true,"nodeName":"s0e10 isTriangle (LTriangle;)Z public Triangle.java condition false"},{"category":"condition","ifCatch":true,"nodeName":"s0e10 isTriangle (LTriangle;)Z public Triangle.java condition true"},{"category":"condition","ifCatch":false,"nodeName":"s31e41 isTriangle (LTriangle;)Z public Triangle.java condition true"},{"category":"condition","ifCatch":true,"nodeName":"s31e41 isTriangle (LTriangle;)Z public Triangle.java condition false"},{"category":"condition","ifCatch":true,"nodeName":"s42e50 isTriangle (LTriangle;)Z public Triangle.java condition true"},{"category":"condition","ifCatch":true,"nodeName":"s42e50 isTriangle (LTriangle;)Z public Triangle.java condition false"},{"category":"condition","ifCatch":true,"nodeName":"s82e101 isTriangle (LTriangle;)Z public Triangle.java condition false"},{"category":"condition","ifCatch":true,"nodeName":"s82e101 isTriangle (LTriangle;)Z public Triangle.java condition true"},{"category":"condition","ifCatch":true,"nodeName":"s62e81 isTriangle (LTriangle;)Z public Triangle.java condition true"},{"category":"condition","ifCatch":true,"nodeName":"s62e81 isTriangle (LTriangle;)Z public Triangle.java condition false"},{"category":"prime_path","ifCatch":true,"nodeName":"net.mooctest.Triangle.java.<init> (JJJ)V public$PrimePath$0 prime_path"},{"category":"prime_path","ifCatch":true,"nodeName":"net.mooctest.Triangle.java.diffOfBorders (JJ)J public$PrimePath$0 prime_path"},{"category":"prime_path","ifCatch":true,"nodeName":"net.mooctest.Triangle.java.diffOfBorders (JJ)J public$PrimePath$1 prime_path"},{"category":"prime_path","ifCatch":true,"nodeName":"net.mooctest.Triangle.java.getBorders ()[J public$PrimePath$0 prime_path"},{"category":"prime_path","ifCatch":true,"nodeName":"net.mooctest.Triangle.java.getType (LTriangle;)LString; public$PrimePath$0 prime_path"},{"category":"prime_path","ifCatch":true,"nodeName":"net.mooctest.Triangle.java.getType (LTriangle;)LString; public$PrimePath$1 prime_path"},{"category":"prime_path","ifCatch":true,"nodeName":"net.mooctest.Triangle.java.getType (LTriangle;)LString; public$PrimePath$2 prime_path"},{"category":"prime_path","ifCatch":true,"nodeName":"net.mooctest.Triangle.java.getType (LTriangle;)LString; public$PrimePath$3 prime_path"},{"category":"prime_path","ifCatch":true,"nodeName":"net.mooctest.Triangle.java.getType (LTriangle;)LString; public$PrimePath$4 prime_path"},{"category":"prime_path","ifCatch":true,"nodeName":"net.mooctest.Triangle.java.getType (LTriangle;)LString; public$PrimePath$5 prime_path"},{"category":"prime_path","ifCatch":true,"nodeName":"net.mooctest.Triangle.java.getType (LTriangle;)LString; public$PrimePath$6 prime_path"},{"category":"prime_path","ifCatch":true,"nodeName":"net.mooctest.Triangle.java.getType (LTriangle;)LString; public$PrimePath$7 prime_path"},{"category":"prime_path","ifCatch":true,"nodeName":"net.mooctest.Triangle.java.getType (LTriangle;)LString; public$PrimePath$8 prime_path"},{"category":"prime_path","ifCatch":true,"nodeName":"net.mooctest.Triangle.java.getType (LTriangle;)LString; public$PrimePath$9 prime_path"},{"category":"prime_path","ifCatch":true,"nodeName":"net.mooctest.Triangle.java.isTriangle (LTriangle;)Z public$PrimePath$0 prime_path"},{"category":"prime_path","ifCatch":true,"nodeName":"net.mooctest.Triangle.java.isTriangle (LTriangle;)Z public$PrimePath$1 prime_path"},{"category":"prime_path","ifCatch":true,"nodeName":"net.mooctest.Triangle.java.isTriangle (LTriangle;)Z public$PrimePath$2 prime_path"},{"category":"prime_path","ifCatch":true,"nodeName":"net.mooctest.Triangle.java.isTriangle (LTriangle;)Z public$PrimePath$3 prime_path"},{"category":"prime_path","ifCatch":true,"nodeName":"net.mooctest.Triangle.java.isTriangle (LTriangle;)Z public$PrimePath$4 prime_path"},{"category":"prime_path","ifCatch":true,"nodeName":"net.mooctest.Triangle.java.isTriangle (LTriangle;)Z public$PrimePath$5 prime_path"},{"category":"prime_path","ifCatch":true,"nodeName":"net.mooctest.Triangle.java.isTriangle (LTriangle;)Z public$PrimePath$6 prime_path"},{"category":"prime_path","ifCatch":true,"nodeName":"net.mooctest.Triangle.java.isTriangle (LTriangle;)Z public$PrimePath$7 prime_path"},{"category":"prime_path","ifCatch":true,"nodeName":"net.mooctest.Triangle.java.isTriangle (LTriangle;)Z public$PrimePath$8 prime_path"},{"category":"prime_path","ifCatch":true,"nodeName":"net.mooctest.Triangle.java.isTriangle (LTriangle;)Z public$PrimePath$9 prime_path"}]